import{_ as r,r as c,o as p,c as o,a as e,b as s,d as a,w as l,e as i}from"./app.70434bce.js";const d="/images/reference/kubernetes/architecture-ha-k8s-cluster.png",t={},D=i('<h1 id="kubernetes高可用集群" tabindex="-1"><a class="header-anchor" href="#kubernetes高可用集群" aria-hidden="true">#</a> Kubernetes高可用集群</h1><p>高可用K8S集群是指K8S的Master节点个数不少于3个，K8S管理面每个组件副本数不少于3个的Kubernetes集群。</p><h2 id="整体架构" tabindex="-1"><a class="header-anchor" href="#整体架构" aria-hidden="true">#</a> 整体架构</h2><p><img src="'+d+'" alt="Kubernetes高可用集群整体架构"></p><h2 id="环境信息" tabindex="-1"><a class="header-anchor" href="#环境信息" aria-hidden="true">#</a> 环境信息</h2><ul><li><p>Master节点：</p><ul><li>192.168.100.13 cnserver20</li><li>192.168.100.14 cnserver21</li><li>192.168.100.15 cnserver22</li></ul></li><li><p>Worker节点：</p><ul><li>192.168.100.10 cnserver17</li><li>192.168.100.11 cnserver18</li><li>192.168.100.12 cnserver19</li></ul></li><li><p>虚拟ip:</p><ul><li>kubernetes-vip：192.168.100.99</li></ul></li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p><code>kubernetes-vip</code>用于Keepalived的虚拟vip配置，与机器在同一网段，使用同一网卡</p></div><h2 id="配置服务器" tabindex="-1"><a class="header-anchor" href="#配置服务器" aria-hidden="true">#</a> 配置服务器</h2><h3 id="基础环境配置" tabindex="-1"><a class="header-anchor" href="#基础环境配置" aria-hidden="true">#</a> 基础环境配置</h3>',9),u=i(`<h3 id="配置-etc-hosts" tabindex="-1"><a class="header-anchor" href="#配置-etc-hosts" aria-hidden="true">#</a> 配置/etc/hosts</h3><p>配置/etc/hosts非必要操作，该配置是为了便于后续直接通过主机名称/vip名称进行操作，如不配置，后续操作中的域主机名称/vip名称需要替换成相应ip.</p><p>配置方式为在所有节点的<code>/etc/hosts</code>文件中添加节点信息和vip信息：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">192.168.100.10 cnserver17</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.100.11 cnserver18</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.100.12 cnserver19</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.100.13 cnserver20</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.100.14 cnserver21</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.100.15 cnserver22</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.100.99 kubernetes-vip</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装keepalived" tabindex="-1"><a class="header-anchor" href="#安装keepalived" aria-hidden="true">#</a> 安装Keepalived</h2><p>Keepalived是一种高可用方案，通过VIP(虚拟IP)和心跳检测来实现高可用。</p><p>Keepalived通常有Master和Backup两个角色，一般情况下有1个master和多个backup.</p><p>Master会绑定VIP到自己网卡上，对外提供服务。</p><p>Master和Backup会定时确定对方状态，当Master不可用的时候，Backup会通知网关，并把VIP绑定到自己的网卡上，实现服务不中断，即为高可用。</p><h3 id="环境信息-1" tabindex="-1"><a class="header-anchor" href="#环境信息-1" aria-hidden="true">#</a> 环境信息</h3><p>搭建Keepalied的机器(Kubernetes高可用集群的Master节点)：</p><ul><li>192.168.100.13 cnserver20</li><li>192.168.100.14 cnserver21</li><li>192.168.100.15 cnserver22</li></ul><h3 id="keepalived配置文件" tabindex="-1"><a class="header-anchor" href="#keepalived配置文件" aria-hidden="true">#</a> Keepalived配置文件</h3><p>在每个节点上配置相应的keepalived.conf，见附件<a href="/downloads/Keepalived%E9%85%8D%E7%BD%AE.zip">Keepalived配置</a>。</p><p>配置文件中需要修改的有如下部分：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">……</span></span>
<span class="line"><span style="color:#D4D4D4;">vrrp_instance VI_1 {</span></span>
<span class="line"><span style="color:#D4D4D4;">  interface em3 # 此处通过ip addr命令根据实际填写，本机ip所在网卡</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">  state BACKUP# 一台节点配置为MASTER，其他节点配置为BACKUP</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">  unicast_src_ip 192.168.100.15  #设置本机内网ip</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span></span>
<span class="line"><span style="color:#D4D4D4;">  #其他两台master ip</span></span>
<span class="line"><span style="color:#D4D4D4;">  unicast_peer {</span></span>
<span class="line"><span style="color:#D4D4D4;">        192.168.100.13</span></span>
<span class="line"><span style="color:#D4D4D4;">        192.168.100.14</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">  virtual_ipaddress {</span></span>
<span class="line"><span style="color:#D4D4D4;">    192.168.100.99  # vip 虚拟ip</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">……</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器启动keepalived" tabindex="-1"><a class="header-anchor" href="#容器启动keepalived" aria-hidden="true">#</a> 容器启动Keepalived</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;"># $keepalivedConfPath: keepalived.conf文件路径</span></span>
<span class="line"><span style="color:#D4D4D4;">docker run \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --name=keepalived \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --cap-add=NET_ADMIN \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --cap-add=NET_BROADCAST \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --cap-add=NET_RAW \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --net=host \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --restart=always \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --volume </span><span style="color:#9CDCFE;">$keepalivedConfPath</span><span style="color:#D4D4D4;">:/container/service/keepalived/assets/keepalived.conf \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    -d osixia/keepalived:2.0.20 \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --copy-service</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装haproxy" tabindex="-1"><a class="header-anchor" href="#安装haproxy" aria-hidden="true">#</a> 安装HAProxy</h2><p>HAProxy 是一款提供高可用性、负载均衡以及基于TCP（第四层）和HTTP（第七层）应用的代理软件。</p><p>HAProxy作为负载均衡时，可以按照指定策略（比如轮询）将流量转发到相应服务中。</p><p>例如当前Server有三个副本由HAProxy进行负载均衡，HAProxy可将客户端对Server的访问请求路由到这三个副本中的一个。这样做有以下好处：</p><ul><li>避免所有请求集中转发到某个server，有效降低单个服务组件的压力;</li><li>当某个server副本宕机，HAProxy可将流量转发到健康的server端，从而保证服务的高可用。</li></ul><h3 id="环境信息-2" tabindex="-1"><a class="header-anchor" href="#环境信息-2" aria-hidden="true">#</a> 环境信息</h3><p>搭建HAProxy的机器(Kubernetes高可用集群的Master节点)：</p><ul><li>192.168.100.13 cnserver20</li><li>192.168.100.14 cnserver21</li><li>192.168.100.15 cnserver22</li></ul><h3 id="haproxy配置文件" tabindex="-1"><a class="header-anchor" href="#haproxy配置文件" aria-hidden="true">#</a> HAProxy配置文件</h3><p>在每个节点上配置<code>haproxy.cfg</code>，见附件<a href="/downloads/haproxy.cfg">HAProxy配置</a>。</p><p>其中，主要的负载相关配置如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">……</span></span>
<span class="line"><span style="color:#D4D4D4;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#D4D4D4;"># main frontend which proxys to the backends</span></span>
<span class="line"><span style="color:#D4D4D4;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#D4D4D4;">frontend  kubernetes-apiserver</span></span>
<span class="line"><span style="color:#D4D4D4;">    mode tcp</span></span>
<span class="line"><span style="color:#D4D4D4;">    bind *:9443  ## 监听9443端口</span></span>
<span class="line"><span style="color:#D4D4D4;">    # bind *:443 ssl # To be completed ....</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">    acl url_static       path_beg       -i /static /images /javascript /stylesheets</span></span>
<span class="line"><span style="color:#D4D4D4;">    acl url_static       path_end       -i .jpg .gif .png .css .js</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">    default_backend             kubernetes-apiserver</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#D4D4D4;"># round robin balancing between the various backends</span></span>
<span class="line"><span style="color:#D4D4D4;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#D4D4D4;">backend kubernetes-apiserver</span></span>
<span class="line"><span style="color:#D4D4D4;">    mode        tcp  # 模式tcp</span></span>
<span class="line"><span style="color:#D4D4D4;">    balance     roundrobin  # 采用轮询的负载算法</span></span>
<span class="line"><span style="color:#D4D4D4;"># k8s-apiservers backend  # 配置apiserver，端口6443</span></span>
<span class="line"><span style="color:#D4D4D4;"> server cnserver20 192.168.100.13:6443 check</span></span>
<span class="line"><span style="color:#D4D4D4;"> server cnserver21 192.168.100.14:6443 check</span></span>
<span class="line"><span style="color:#D4D4D4;"> server cnserver22 192.168.100.15:6443 check</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="准备socket文件" tabindex="-1"><a class="header-anchor" href="#准备socket文件" aria-hidden="true">#</a> 准备socket文件</h3><p>准备一个空的文件夹路径<code>$statsDirPath</code>用于haproxy持久化stats文件。</p><h3 id="容器启动haproxy" tabindex="-1"><a class="header-anchor" href="#容器启动haproxy" aria-hidden="true">#</a> 容器启动HAProxy</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;"># $haproxyConfDirPath: haproxy.conf文件所在文件夹路径</span></span>
<span class="line"><span style="color:#6A9955;"># $statsDirPath: 用于haproxy持久化stats文件的文件夹路径</span></span>
<span class="line"><span style="color:#D4D4D4;">docker run \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --name=haproxy \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --net=host \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --restart=always \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --volume </span><span style="color:#9CDCFE;">$haproxyConfDirPath</span><span style="color:#D4D4D4;">:/usr/local/etc/haproxy:ro \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --volume </span><span style="color:#9CDCFE;">$statsDirPath</span><span style="color:#D4D4D4;">:/var/lib/haproxy \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    -d haproxy:2.3.6</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看haproxy监控" tabindex="-1"><a class="header-anchor" href="#查看haproxy监控" aria-hidden="true">#</a> 查看HAProxy监控</h3><p>在配置文件<code>haproxy.cfg</code>中定义了HAProxy的监控配置如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#D4D4D4;"># haproxy monitor</span></span>
<span class="line"><span style="color:#D4D4D4;">#---------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#D4D4D4;">listen admin_stats</span></span>
<span class="line"><span style="color:#D4D4D4;">        stats   enable</span></span>
<span class="line"><span style="color:#D4D4D4;">        bind    *:9445    #监听的ip端口号</span></span>
<span class="line"><span style="color:#D4D4D4;">        mode    http    #开关</span></span>
<span class="line"><span style="color:#D4D4D4;">        option  httplog</span></span>
<span class="line"><span style="color:#D4D4D4;">        log     global</span></span>
<span class="line"><span style="color:#D4D4D4;">        maxconn 10</span></span>
<span class="line"><span style="color:#D4D4D4;">        stats   refresh 30s   #统计页面自动刷新时间</span></span>
<span class="line"><span style="color:#D4D4D4;">        stats   uri /haproxy#访问的uri   ip:9445/haproxy</span></span>
<span class="line"><span style="color:#D4D4D4;">        stats   realm haproxy</span></span>
<span class="line"><span style="color:#D4D4D4;">        stats   auth admin:admin  #认证用户名和密码</span></span>
<span class="line"><span style="color:#D4D4D4;">        stats   hide-version   #隐藏HAProxy的版本号</span></span>
<span class="line"><span style="color:#D4D4D4;">        stats   admin if TRUE   #管理界面，如果认证成功了，可通过webui管理节点</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>容器启动之后可以在web上访问来查看haproxy的监控信息，访问地址如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;"># $ip: 由于容器启动命令中制定了--net=host，因此此处的$ip指HAProxy运行的主机的ip</span></span>
<span class="line"><span style="color:#D4D4D4;"># 登录用户名密码为配置中的\`stats auth\`指定，均为admin</span></span>
<span class="line"><span style="color:#D4D4D4;">http://$ip:9445/haproxy</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装master节点" tabindex="-1"><a class="header-anchor" href="#安装master节点" aria-hidden="true">#</a> 安装Master节点</h2><p>此处选择先安装Master节点<code>192.168.100.13 cnserver20</code>，从而完成高可用Kubernetes集群的初始化。</p><h3 id="准备kubeadm配置文件" tabindex="-1"><a class="header-anchor" href="#准备kubeadm配置文件" aria-hidden="true">#</a> 准备Kubeadm配置文件</h3><p>Kubeadm的配置文件<code>kubeadm.yaml</code>内容如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">apiVersion: kubeadm.k8s.io/v1beta2</span></span>
<span class="line"><span style="color:#D4D4D4;">kind: ClusterConfiguration</span></span>
<span class="line"><span style="color:#D4D4D4;">kubernetesVersion: v1.23.1</span></span>
<span class="line"><span style="color:#D4D4D4;">imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span></span>
<span class="line"><span style="color:#D4D4D4;">controlPlaneEndpoint: &quot;kubernetes-vip:9443&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">networking:</span></span>
<span class="line"><span style="color:#D4D4D4;">  dnsDomain: cluster.local</span></span>
<span class="line"><span style="color:#D4D4D4;">  podSubnet: 10.244.0.0/16</span></span>
<span class="line"><span style="color:#D4D4D4;">  serviceSubnet: 10.211.0.0/12</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li><code>kubernetes-vip</code>为<code>/etc/hosts</code>文件中配置Keepalived虚拟IP域名，详见<a href="#%E9%85%8D%E7%BD%AEetchosts">配置/etc/hosts</a>.</li><li>此处使用<code>Flannel</code>作为网络组件,对应的&quot;podSubnet&quot;为<code>10.244.0.0/16</code>；</li><li>若使用<code>Calico</code>作为网络组件,对应的&quot;podSubnet&quot;为<code>192.168.0.0/16</code>.</li></ul></div><h3 id="执行初始化指令" tabindex="-1"><a class="header-anchor" href="#执行初始化指令" aria-hidden="true">#</a> 执行初始化指令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm init --config kubeadm.yaml --upload-certs</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果此前执行过以上脚本或者<code>Kubeadm</code>安装指令，则应在执行以上脚本之前执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm reset</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>初始化完成后，将打印如下消息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">Your Kubernetes control-plane has initialized successfully!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">To start using your cluster, you need to run the following as a regular user:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  mkdir -p </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube</span></span>
<span class="line"><span style="color:#D4D4D4;">  sudo cp -i /etc/kubernetes/admin.conf </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"><span style="color:#D4D4D4;">  sudo chown </span><span style="color:#CE9178;">$(id -u)</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">$(id -g)</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Alternatively, </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> you are the root user, you can run:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">export</span><span style="color:#D4D4D4;"> KUBECONFIG=/etc/kubernetes/admin.conf</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">You should now deploy a pod network to the cluster.</span></span>
<span class="line"><span style="color:#D4D4D4;">Run </span><span style="color:#CE9178;">&quot;kubectl apply -f [podnetwork].yaml&quot;</span><span style="color:#D4D4D4;"> with one of the options listed at:</span></span>
<span class="line"><span style="color:#D4D4D4;">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">You can now join any number of the control-plane node running the following </span><span style="color:#DCDCAA;">command</span><span style="color:#D4D4D4;"> on each as root:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  kubeadm join kubernetes-vip:9443 --token grv9o6.75venx9x7sajjowp \\</span></span>
<span class="line"><span style="color:#D4D4D4;">        --discovery-token-ca-cert-hash sha256:ea92e650eed7e5df76ab99ac545f61713d3f1ff9001a3281a1f5c71ece7309a5 \\</span></span>
<span class="line"><span style="color:#D4D4D4;">        --control-plane --certificate-key 1e610197e25fbb02e695db6124f21874ff865044cd17b2a3fe5ca73b0d8a791c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Please note that the certificate-key gives access to cluster sensitive data, keep it secret!</span></span>
<span class="line"><span style="color:#D4D4D4;">As a safeguard, uploaded-certs will be deleted </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> two hours; If necessary, you can use</span></span>
<span class="line"><span style="color:#CE9178;">&quot;kubeadm init phase upload-certs --upload-certs&quot;</span><span style="color:#D4D4D4;"> to reload certs afterward.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Then you can join any number of worker nodes by running the following on each as root:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kubeadm join kubernetes-vip:9443 --token grv9o6.75venx9x7sajjowp \\</span></span>
<span class="line"><span style="color:#D4D4D4;">        --discovery-token-ca-cert-hash sha256:ea92e650eed7e5df76ab99ac545f61713d3f1ff9001a3281a1f5c71ece7309a5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置kubeconfig" tabindex="-1"><a class="header-anchor" href="#配置kubeconfig" aria-hidden="true">#</a> 配置Kubeconfig</h3>`,51),v=e("h3",{id:"安装kubernetes网络组件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装kubernetes网络组件","aria-hidden":"true"},"#"),s(" 安装Kubernetes网络组件")],-1),b=e("h2",{id:"查看集群信息",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#查看集群信息","aria-hidden":"true"},"#"),s(" 查看集群信息")],-1),h=i(`<h2 id="添加master节点" tabindex="-1"><a class="header-anchor" href="#添加master节点" aria-hidden="true">#</a> 添加Master节点</h2><p>集群初始化完成后打印出的信息中含有<code>--control-plane</code>参数的指令可用于添加<code>Master</code>节点。</p><p>在需要作为Master节点添加到集群中的节点上执行:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm join kubernetes-vip:9443 --token grv9o6.75venx9x7sajjowp \\</span></span>
<span class="line"><span style="color:#D4D4D4;">      --discovery-token-ca-cert-hash sha256:ea92e650eed7e5df76ab99ac545f61713d3f1ff9001a3281a1f5c71ece7309a5 \\</span></span>
<span class="line"><span style="color:#D4D4D4;">      --control-plane --certificate-key 1e610197e25fbb02e695db6124f21874ff865044cd17b2a3fe5ca73b0d8a791c</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),m={class:"custom-container tip"},y=e("p",{class:"custom-container-title"},"提示",-1),k=e("code",null,"Kubeconfig",-1),f=e("h2",{id:"添加worker节点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#添加worker节点","aria-hidden":"true"},"#"),s(" 添加Worker节点")],-1),E=e("p",null,[s("集群初始化完成后打印出的信息中不含有"),e("code",null,"--control-plane"),s("参数的指令可用于添加"),e("code",null,"Worker"),s("节点。")],-1),x=e("h2",{id:"卸载kubernetes集群",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#卸载kubernetes集群","aria-hidden":"true"},"#"),s(" 卸载Kubernetes集群")],-1);function g(_,A){const n=c("RouterLink");return p(),o("div",null,[D,e("p",null,[s("参考"),a(n,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster.html#%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8"},{default:l(()=>[s("Kubernetes集群-配置服务器")]),_:1}),s("。")]),u,e("p",null,[s("参考"),a(n,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster.html#%E9%85%8D%E7%BD%AEkubeconfig"},{default:l(()=>[s("Kubernetes集群-配置Kubeconfig")]),_:1}),s(".")]),v,e("p",null,[s("参考"),a(n,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster.html#%E5%AE%89%E8%A3%85kubernetes%E7%BD%91%E7%BB%9C%E7%BB%84%E4%BB%B6"},{default:l(()=>[s("Kubernetes集群-安装Kubernetes网络组件")]),_:1}),s("。")]),b,e("p",null,[s("参考"),a(n,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster.html#%E6%9F%A5%E7%9C%8B%E9%9B%86%E7%BE%A4%E4%BF%A1%E6%81%AF"},{default:l(()=>[s("Kubernetes集群-查看集群信息")]),_:1}),s("。")]),h,e("div",m,[y,e("ul",null,[e("li",null,[s("Kubeadm更多参数参考"),a(n,{to:"/zh/reference/tools/kubeadm.html#%E5%8F%82%E6%95%B0"},{default:l(()=>[s("Kubeadm参数")]),_:1}),s(";")]),e("li",null,[s("若Token已过期，参考"),a(n,{to:"/zh/reference/kubernetes/installer-config.html#%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E5%A2%9E%E5%8A%A0%E8%8A%82%E7%82%B9%E7%9A%84token"},{default:l(()=>[s("重新生成增加节点的Token")]),_:1}),s(";")]),e("li",null,[s("若Certificate已过期，参考"),a(n,{to:"/zh/reference/kubernetes/installer-config.html#%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E5%A2%9E%E5%8A%A0%E8%8A%82%E7%82%B9%E7%9A%84certificate"},{default:l(()=>[s("重新生成增加节点的Certificate")]),_:1}),s(";")]),e("li",null,[s("添加Master节点之后，亦需要配置"),k,s("，参考"),a(n,{to:"/zh/reference/kubernetes/installer-config.html#%E9%85%8D%E7%BD%AEkubeconfig"},{default:l(()=>[s("配置Kubeconfig")]),_:1}),s(".")])])]),f,E,e("p",null,[s("参考"),a(n,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster.html#%E6%B7%BB%E5%8A%A0worker%E8%8A%82%E7%82%B9"},{default:l(()=>[s("Kubernetes集群-添加Worker节点")]),_:1}),s("。")]),x,e("p",null,[s("参考"),a(n,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster.html#%E5%8D%B8%E8%BD%BDkubernetes%E9%9B%86%E7%BE%A4"},{default:l(()=>[s("Kubernetes集群-卸载Kubernetes集群")]),_:1}),s("。")])])}const K=r(t,[["render",g],["__file","kubernetes-cluster-ha.html.vue"]]);export{K as default};
