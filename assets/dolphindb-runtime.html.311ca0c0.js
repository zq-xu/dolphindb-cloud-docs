import{_ as i,r as c,o as t,c as r,a as n,b as e,d as s,w as a,e as o}from"./app.8cf05f69.js";const p={},u=n("h1",{id:"dolphindb运行时",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dolphindb运行时","aria-hidden":"true"},"#"),e(" DolphinDB运行时")],-1),D=n("ul",null,[n("li",null,[e("Controller: 管理节点，在集群模式下存在，可以有多个副本，遵循"),n("code",null,"Raft"),e("选主；")]),n("li",null,"Datanode: 数据节点，用于数据存储和计算任务，集群模式下可以有多个副本；"),n("li",null,"Computenode: 计算节点，主要执行计算任务，集群模式下可以有多个副本。")],-1),b=n("h2",{id:"运行时总览",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#运行时总览","aria-hidden":"true"},"#"),e(" 运行时总览")],-1),v=o('<ul><li>DolphinDB实例： 每个DolphinDB实例对应一个<code>Statefulset</code>资源(一个<code>Pod</code>)；</li><li>DolphinDB资源： 使用<code>Pod</code>中的DolphinDB容器的<code>resources</code>属性配置CPU和Memory资源；</li><li>DolphinDB配置： DolphinDB的配置项定义在<code>Configmap</code>资源中(包括<code>DolphinDB License</code>)；</li><li>DolphinDB网络： DolphinDB的网络由<code>Service</code>资源、<code>Ingress</code>资源进行代理；</li><li>DolphinDB存储： DolphinDB的存储主要由<code>PVC</code>资源进行管理，实现数据持久化。</li></ul><div class="custom-container tip"><p class="custom-container-title">License依赖</p><p>DolphinDB在Kubernetes环境中仍然需要使用License进行身份验证，DolphinDB在Kubernetes环境中的License以<code>Configmap</code>资源的形式存在，并挂载到DolphinDB所在的<code>Pod</code>资源中。</p></div><h2 id="运行时存储" tabindex="-1"><a class="header-anchor" href="#运行时存储" aria-hidden="true">#</a> 运行时存储</h2>',3),h={href:"https://kubernetes.io/zh-cn/docs/concepts/storage/persistent-volumes/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://kubernetes.io/zh-cn/docs/concepts/storage/persistent-volumes/",target:"_blank",rel:"noopener noreferrer"},B={class:"custom-container tip"},_=n("p",{class:"custom-container-title"},"PV/PVC绑定原理",-1),f=n("p",null,[e("DolphinDB实例对应的"),n("code",null,"Pod"),e("以卷的形式挂载"),n("code",null,"PVC"),e("资源，在"),n("code",null,"PVC"),e("资源中声明需要的持久化数据的容量，Kubernetes会根据"),n("code",null,"PVC"),e("资源定义的容量等属性自动绑定环境中符合条件的"),n("code",null,"PV"),e("资源。")],-1),C=n("code",null,"PV",-1),x={href:"https://kubernetes.io/zh-cn/docs/concepts/storage/storage-classes/",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"PVC",-1),E=n("code",null,"PVC",-1),y=n("code",null,"PVC",-1),g=n("code",null,"PV",-1),z=o(`<p>DolphinDB集群中的每个DolphinDB实例对应的运行时存储都有三类：</p><ul><li>数据存储：用于存储集群数据，对应容器中的<code>$workDir/data</code>路径；</li><li>日志存储：用于持久化DolphinDB打印的日志，对应容器中的<code>$workDir/data</code>路径；</li><li>CoreDump存储：用于存储DolphinDB发生<code>core dump</code>时产生的CoreDump文件，对应容器中的<code>/data/ddb/core</code>路径。</li></ul><p>其中，CoreDump存储主要用于定位问题，可以通过配置<code>CRD</code>选择性移除。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li>集群模式时，<code>$workDir</code>为<code>/data/ddb/server/clusterDemo</code>;</li><li>单实例模式时，<code>$workDir</code>为<code>/data/ddb/server</code>;</li></ul></div><p>在Kubernetes环境中，名为<code>xzq</code>的DolphinDB集群的<code>PVC</code>资源如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl -ndolphindb get pvc | grep xzq</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 控制台打印信息如下：</span></span>
<span class="line"><span style="color:#6A9955;"># \`data-\`作为名称前缀的为数据存储</span></span>
<span class="line"><span style="color:#6A9955;"># \`log-\`作为名称前缀的为日志存储</span></span>
<span class="line"><span style="color:#6A9955;"># \`core-\`作为名称前缀的为CoreDump存储</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">NAME                              STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-cn-0-0               Bound    pvc-48e423e7-5443-4cb7-85d1-bc01472e4736   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-cn-1-0               Bound    pvc-5e20654d-908c-4266-ae34-3539ab899656   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-cn-2-0               Bound    pvc-50768192-81a1-4264-b913-eba5ccaca7b0   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-ctr-0-0              Bound    pvc-624428dc-3c94-4360-86a5-9a6b8d624188   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-ctr-1-0              Bound    pvc-7314fc98-cb5d-4b4a-84e8-04c6bf5d6075   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-ctr-2-0              Bound    pvc-a9bb56db-ac3d-4201-a099-99219eefe838   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-dn-0-0               Bound    pvc-98b2dfdc-9850-4de1-a12b-92eff230fae9   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-dn-1-0               Bound    pvc-2e809c4a-e72a-46b5-bc05-ac74b43ce5c8   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">core-ddb-xzq-dn-2-0               Bound    pvc-7e42c58b-435f-4cc0-85d6-dc4e53c1342a   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-cn-0-0               Bound    pvc-3a6b68f7-6fae-4142-b3dd-c4d598c04645   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-cn-1-0               Bound    pvc-a6df3544-efc3-4070-aaa3-025e9cc6d03d   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-cn-2-0               Bound    pvc-b667c6a0-662b-4e0a-9977-b6ca7df461b2   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-ctr-0-0              Bound    pvc-7bb753c7-7012-48ba-8d28-35ab584db035   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-ctr-1-0              Bound    pvc-4b83c429-df9e-4228-9876-46899b3649cb   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-ctr-2-0              Bound    pvc-fc3315cb-406d-459b-a640-5d0a98bac647   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-dn-0-0               Bound    pvc-95e32832-ca82-4556-90d5-f361e07059a3   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-dn-1-0               Bound    pvc-21a4bb23-ec2b-49c0-ae62-c11a813aa60b   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">data-ddb-xzq-dn-2-0               Bound    pvc-c0ecaf27-8696-4238-a347-be85294270a6   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-cn-0-0                Bound    pvc-e0ae60bd-7699-4f30-8e83-7ae573faefc7   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-cn-1-0                Bound    pvc-2243523e-ac9a-409c-8222-a75039c12fda   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-cn-2-0                Bound    pvc-83fb18db-88c5-4155-ae2f-4ae952a53f2d   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-ctr-0-0               Bound    pvc-7a4b68e2-b366-4fca-a1cb-a1fd7e250be5   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-ctr-1-0               Bound    pvc-84dbcf86-a237-480b-95d0-d17764dd4391   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-ctr-2-0               Bound    pvc-a8ff2fe5-a715-45b7-8b9a-65cce9e50203   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-dn-0-0                Bound    pvc-016465d7-dc44-4057-81ab-1f331e654ce3   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-dn-1-0                Bound    pvc-aae55a41-0e76-42db-99d2-47c1d5cd2d10   1Gi        RWO            standard       16d</span></span>
<span class="line"><span style="color:#D4D4D4;">log-ddb-xzq-dn-2-0                Bound    pvc-d04f7633-74e0-4a15-9a9b-d2b5d7ec61f6   1Gi        RWO            standard       16d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行时网络" tabindex="-1"><a class="header-anchor" href="#运行时网络" aria-hidden="true">#</a> 运行时网络</h2>`,7),P={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"},k=o(`<ul><li><a href="#%E6%9C%8D%E5%8A%A1%E7%BD%91%E7%BB%9C">服务网络</a>：主要用于DolphinDB集群对外提供服务；</li><li><a href="#%E5%86%85%E9%83%A8%E7%BD%91%E7%BB%9C">内部网络</a>：主要用于DolphinDB集群内实例通信。</li></ul><p>在Kubernetes环境中，名为<code>xzq</code>的DolphinDB集群的<code>Service</code>资源如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl -ndolphindb get svc | grep xzq</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 控制台打印信息如下：</span></span>
<span class="line"><span style="color:#6A9955;"># Computenode的服务网络和内部网络</span></span>
<span class="line"><span style="color:#D4D4D4;">ddb-xzq-cn                        NodePort    10.109.33.194    &lt;none&gt;        32210:30611/TCP,8000:30849/TCP   16d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Controller的服务网络，始终指向\`Master Controller\`实例</span></span>
<span class="line"><span style="color:#D4D4D4;">ddb-xzq-ctr                       NodePort    10.109.52.236    &lt;none&gt;        31210:30959/TCP                  16d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Controller的内部网络</span></span>
<span class="line"><span style="color:#D4D4D4;">ddb-xzq-ctr-inner                 ClusterIP   10.107.45.219    &lt;none&gt;        31210/TCP                        16d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Datanode的服务网络和内部网络</span></span>
<span class="line"><span style="color:#D4D4D4;">ddb-xzq-dn                        NodePort    10.104.253.244   &lt;none&gt;        32210:32334/TCP,8000:31647/TCP   16d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="服务网络" tabindex="-1"><a class="header-anchor" href="#服务网络" aria-hidden="true">#</a> 服务网络</h3><p>DolphinDB集群主要通过<code>Service</code>资源对外提供服务，默认网络如下：</p><ul><li>Controller由一个<code>Service</code>资源提供服务，自动指向<code>Master Controller</code>实例；</li><li>所有Datanode实例由一个<code>Service</code>资源进行负载均衡；</li><li>所有Computenode实例由一个<code>Service</code>资源进行负载均衡；</li></ul><p>每个DolphinDB实例都可以拥有单独的<code>Service</code>资源，使得用户可以访问指定的DolphinDB实例。</p><p>可以通过配置<code>CRD</code>或者操作可视化界面来创建或删除指定DolphinDB实例的<code>Service</code>资源。</p><div class="custom-container tip"><p class="custom-container-title">Controller的Service资源是如何始终指向Master Controller实例的？</p><p>集群模式下,DolphinDB的Controller实例可能会有多个，它们基于<code>Raft</code>算法进行选主。</p><p>此时会存在一个<code>Service Manager</code>组件，该组件会监控选主情况，使<code>Service</code>资源的<code>Selector</code>属性只与<code>Master Controller</code>实例对应的<code>Pod</code>的<code>Label</code>属性相匹配，从而控制<code>Service</code>资源始终指向<code>Master Controller</code>实例。</p></div><h3 id="内部网络" tabindex="-1"><a class="header-anchor" href="#内部网络" aria-hidden="true">#</a> 内部网络</h3><p>DolphinDB集群作为分布式数据库，每个DolphinDB实例对应一个由<code>StatefulSet</code>资源生成的<code>Pod</code>实例，DolphinDB实例之间需要进行网络通信。</p>`,11),R=n("code",null,"StatefulSet",-1),q=n("code",null,"Spec.ServiceName",-1),A=n("code",null,"Service",-1),O=n("code",null,"Service",-1),G={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#headless-services",target:"_blank",rel:"noopener noreferrer"},W=o('<div class="custom-container tip"><p class="custom-container-title">Kubernetes集群内部的Service域名访问格式</p><ul><li><code>Service</code>: <code>$ServiceName.$namespace.svc.cluster.local</code></li><li><code>Headless Service</code>: <code>$PodName.$ServiceName.$namespace.svc.cluster.local</code></li></ul></div><p>DolphinDB集群的内部网络主要通过三个<code>Service</code>资源生成的若干<code>Headless Service</code>资源组成：</p><ul><li>Controller实例：所有Controller实例对应的<code>StatefulSet</code>资源绑定一个<code>Service</code>;</li><li>Datanode实例：所有Datanode实例对应的<code>StatefulSet</code>资源绑定一个<code>Service</code>;</li><li>Computenode实例：所有Computenode实例对应的<code>StatefulSet</code>资源绑定一个<code>Service</code>.</li></ul><div class="custom-container warning"><p class="custom-container-title">此处可优化</p><p>可以使用一个<code>Service资源</code>来生成所有的<code>Headless Service</code>资源。</p></div><h2 id="运行时配置" tabindex="-1"><a class="header-anchor" href="#运行时配置" aria-hidden="true">#</a> 运行时配置</h2>',5),V=n("code",null,"dataSync",-1),K=n("code",null,"workerNum",-1),w={href:"https://www.dolphindb.cn/cn/help/130/DatabaseandDistributedComputing/Configuration/index.html",target:"_blank",rel:"noopener noreferrer"},N=o('<h3 id="加载方式" tabindex="-1"><a class="header-anchor" href="#加载方式" aria-hidden="true">#</a> 加载方式</h3><p>在Kubernetes环境中，DolphinDB实例以容器形式运行，包装在Kubernetes的<code>Pod</code>资源中。</p><p>DolphinDB实例的运行时配置在<code>Pod</code>资源的初始化阶段完成加载，主要依赖于：</p><ul><li><code>Configmap</code>资源: 在<code>Configmap</code>资源中定义配置,挂载到<code>Pod</code>资源；</li><li><code>init</code>容器：<code>Pod</code>资源的<code>init</code>容器读取挂载的自定义配置，自动生成配置文件或启动脚本。</li></ul>',4),L={class:"custom-container tip"},T=n("p",{class:"custom-container-title"},"提示",-1),M=n("p",null,"在DolphinDB运行期间，若修改运行时配置，则需要重新启动DolphinDB实例方可生效。",-1),$=n("h3",{id:"配置方式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#配置方式","aria-hidden":"true"},"#"),e(" 配置方式")],-1),F=n("p",null,"具体的配置方式根据部署方式有所区别，主要包括：",-1),I=n("code",null,"CRD",-1);function H(U,Y){const d=c("RouterLink"),l=c("ExternalLinkIcon");return t(),r("div",null,[u,n("p",null,[e("在"),s(d,{to:"/zh/reference/kubernetes/"},{default:a(()=>[e("Kubernetes")]),_:1}),e("环境中，DolphinDB有三种角色的实例，分别为：")]),D,b,n("p",null,[e("在"),s(d,{to:"/zh/reference/kubernetes/"},{default:a(()=>[e("Kubernetes")]),_:1}),e("环境中，DolphinDB的运行时资源主要包括以下几个部分：")]),v,n("p",null,[e("在Kubernetes环境中，DolphinDB实例使用"),n("a",h,[e("PV(Persistent Volume)"),s(l)]),e("和"),n("a",m,[e("PVC(Persistent Volume Claim)"),s(l)]),e("来做持久化存储。")]),n("div",B,[_,f,n("p",null,[e("在环境中没有匹配的"),C,e("资源但是存在"),n("a",x,[e("存储类(StorageClass)"),s(l)]),e("的时候，可以在"),S,e("资源中指定存储类，由指定的存储类来为"),E,e("资源创建并绑定符合"),y,e("资源预期的"),g,e("资源。")])]),z,n("p",null,[e("在Kubernetes环境中，DolphinDB的运行时网络由"),n("a",P,[e("Service"),s(l)]),e("资源提供，主要包括：")]),k,n("p",null,[e("每个DolphinDB实例对应的"),R,e("资源都会通过"),q,e("属性绑定一个"),A,e("资源，该"),O,e("资源会为每个绑定的DolphinDB实例生成一个单独的"),n("a",G,[e("Headless Service"),s(l)]),e("资源.")]),W,n("p",null,[e("在Kubernetes环境中，DolphinDB也可以指定"),V,e("、"),K,e("等"),n("a",w,[e("运行时配置"),s(l)]),e("。")]),N,n("div",L,[T,M,n("p",null,[e("在"),s(d,{to:"/zh/tutorial/kubernetes/crd-operator.html"},{default:a(()=>[e("CRD && Operator")]),_:1}),e("模式下，DolphinDB集群会在DolphinDB-Operator组件控制下重启。")])]),$,F,n("ul",null,[n("li",null,[e("可视化界面：适用于"),s(d,{to:"/zh/tutorial/kubernetes/dolphindb-deployment.html#%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E9%83%A8%E7%BD%B2"},{default:a(()=>[e("可视化管理平台部署")]),_:1}),e(";")]),n("li",null,[I,e("参数：适用于"),s(d,{to:"/zh/tutorial/kubernetes/dolphindb-deployment.html#crd-operator%E9%83%A8%E7%BD%B2"},{default:a(()=>[e("CRD && Operator部署")]),_:1}),e("和"),s(d,{to:"/zh/tutorial/kubernetes/dolphindb-deployment.html#%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E9%83%A8%E7%BD%B2"},{default:a(()=>[e("可视化管理平台部署")]),_:1}),e(";")]),n("li",null,[e("Configmap：适用于"),s(d,{to:"/zh/tutorial/kubernetes/dolphindb-deployment.html#kubernetes%E5%8E%9F%E7%94%9F%E8%B5%84%E6%BA%90%E9%83%A8%E7%BD%B2"},{default:a(()=>[e("Kubernetes原生资源部署")]),_:1}),e("。")])])])}const J=i(p,[["render",H],["__file","dolphindb-runtime.html.vue"]]);export{J as default};
