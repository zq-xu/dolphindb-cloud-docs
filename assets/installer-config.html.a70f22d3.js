import{_ as c,r,o,c as d,a as s,d as n,w as l,b as e,e as i}from"./app.7cabacd3.js";const t={},p=i('<h1 id="安装-配置" tabindex="-1"><a class="header-anchor" href="#安装-配置" aria-hidden="true">#</a> 安装 &amp;&amp; 配置</h1><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><h3 id="kubernetes安装" tabindex="-1"><a class="header-anchor" href="#kubernetes安装" aria-hidden="true">#</a> Kubernetes安装</h3>',3),u=s("h3",{id:"csi安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#csi安装","aria-hidden":"true"},"#"),e(" CSI安装")],-1),h=s("code",null,"Ceph",-1),b=s("code",null,"NFS",-1),v=s("h3",{id:"cni安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#cni安装","aria-hidden":"true"},"#"),e(" CNI安装")],-1),m=s("code",null,"Calico",-1),D=i(`<h2 id="常用配置" tabindex="-1"><a class="header-anchor" href="#常用配置" aria-hidden="true">#</a> 常用配置</h2><h3 id="增加节点" tabindex="-1"><a class="header-anchor" href="#增加节点" aria-hidden="true">#</a> 增加节点</h3><p>创建集群时控制台打印信息中含有新增节点的指令，可按照该指令增加节点至集群。</p><p>若遗失该指令，或<code>token</code>/<code>certificate-key</code>等参数过期，可参考如下方式重新生成指令：</p><ul><li><a href="%E5%A2%9E%E5%8A%A0worker%E8%8A%82%E7%82%B9">增加Worker节点</a></li><li><a href="%E5%A2%9E%E5%8A%A0master%E8%8A%82%E7%82%B9">增加Master节点</a></li></ul><h4 id="增加worker节点" tabindex="-1"><a class="header-anchor" href="#增加worker节点" aria-hidden="true">#</a> 增加Worker节点</h4><p>在集群中任意Master节点通过以下命令生成join命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm token create --print-join-command</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 控制台打印信息如下：</span></span>
<span class="line"><span style="color:#D4D4D4;">kubeadm join kubernetes-vip:9443 --token grv9o6.75venx9x7sajjowp \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --discovery-token-ca-cert-hash sha256:ea92e650eed7e5df76ab99ac545f61713d3f1ff9001a3281a1f5c71ece7309a5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果<code>token</code>过期，join命令需要重新生成。</p></div><h4 id="增加master节点" tabindex="-1"><a class="header-anchor" href="#增加master节点" aria-hidden="true">#</a> 增加Master节点</h4><ul><li><strong>步骤一</strong></li></ul><p>先按照<a href="%E5%A2%9E%E5%8A%A0worker%E8%8A%82%E7%82%B9">增加Worker节点</a>的操作生成join命令。</p><ul><li><strong>步骤二</strong></li></ul><p>在集群中任意Master节点执行以下节点生成<code>certificate-key</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm init phase upload-certs --upload-certs</span></span>
<span class="line"><span style="color:#6A9955;"># 控制台输出如下：</span></span>
<span class="line"><span style="color:#D4D4D4;">[upload-certs] Storing the certificates </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> Secret </span><span style="color:#CE9178;">&quot;kubeadm-certs&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> the </span><span style="color:#CE9178;">&quot;kube-system&quot;</span><span style="color:#D4D4D4;"> Namespace</span></span>
<span class="line"><span style="color:#D4D4D4;">[upload-certs] Using certificate key:</span></span>
<span class="line"><span style="color:#D4D4D4;">1e610197e25fbb02e695db6124f21874ff865044cd17b2a3fe5ca73b0d8a791c</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p><code>certificate-key</code>有效期为2h, 如果超过了2h, 需要重新生成。</p></div><ul><li><strong>步骤三</strong></li></ul><p>使用<code>--control-plane --certificate-key</code>将步骤一和步骤二中获取到的信息拼接：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm join kubernetes-vip:9443 --token grv9o6.75venx9x7sajjowp \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --discovery-token-ca-cert-hash sha256:ea92e650eed7e5df76ab99ac545f61713d3f1ff9001a3281a1f5c71ece7309a5 \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    --control-plane --certificate-key 1e610197e25fbb02e695db6124f21874ff865044cd17b2a3fe5ca73b0d8a791c</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="移除节点" tabindex="-1"><a class="header-anchor" href="#移除节点" aria-hidden="true">#</a> 移除节点</h3><p>可使用如下指令从Kubernetes集群移除节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;"># 获取集群中的节点</span></span>
<span class="line"><span style="color:#D4D4D4;">kubectl  get nodes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 移除指定节点</span></span>
<span class="line"><span style="color:#D4D4D4;">kubectl  delete nodes </span><span style="color:#9CDCFE;">$nodeName</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置节点角色" tabindex="-1"><a class="header-anchor" href="#设置节点角色" aria-hidden="true">#</a> 设置节点角色</h3><ul><li>将节点角色设置为<code>Master</code>：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl label nodes </span><span style="color:#9CDCFE;">$NodeName</span><span style="color:#D4D4D4;"> node-role.kubernetes.io/master=</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>将节点角色设置为<code>Worker</code>：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl label nodes </span><span style="color:#9CDCFE;">$NodeName</span><span style="color:#D4D4D4;"> node-role.kubernetes.io/node=</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设置污点" tabindex="-1"><a class="header-anchor" href="#设置污点" aria-hidden="true">#</a> 设置污点</h3><p>为<code>Master</code>节点设置污点，从而工作负载<code>Pod</code>不会被调度到该<code>Master</code>节点上：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl taint nodes </span><span style="color:#9CDCFE;">$NodeName</span><span style="color:#D4D4D4;"> node-role.kubernetes.io/master=:NoSchedule</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="移除污点" tabindex="-1"><a class="header-anchor" href="#移除污点" aria-hidden="true">#</a> 移除污点</h3><p>移除<code>Master</code>节点的污点，从而工作负载<code>Pod</code>允许被调度到该<code>Master</code>节点上：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl taint nodes </span><span style="color:#9CDCFE;">$NodeName</span><span style="color:#D4D4D4;"> node-role.kubernetes.io/master-</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置kubeconfig" tabindex="-1"><a class="header-anchor" href="#配置kubeconfig" aria-hidden="true">#</a> 配置Kubeconfig</h3><p>从<code>Master</code>节点的<code>/etc/kubernetes/admin.conf</code>复制到目的节点上的$kubeconfigPath，然后参考以下脚本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">mkdir -p </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube</span></span>
<span class="line"><span style="color:#D4D4D4;">sudo cp -i </span><span style="color:#9CDCFE;">$kubeconfigPath</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"><span style="color:#D4D4D4;">sudo chown </span><span style="color:#CE9178;">$(id -u)</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">$(id -g)</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更改kubelet工作路径" tabindex="-1"><a class="header-anchor" href="#更改kubelet工作路径" aria-hidden="true">#</a> 更改Kubelet工作路径</h3><p>在Kubernetes环境中，<code>Pod</code>的卷、日志和其他一些信息将存储在节点的<code>Kubelet</code>工作路径中。</p><p>在Kubernetes节点上，默认的<code>Kubelet</code>工作路径是<code>/var/lib/kubelet</code>，如果该路径所在磁盘比较小，则不能运行很多<code>Pod</code>。如果需要将其修改为其他路径(如<code>/home/k8s/kubelet</code>)，则可参照以下步骤：</p><ul><li><strong>步骤一</strong> 编辑<code>kubeadm.conf</code>,将<code>root-dir</code>标志添加到环境中：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">vim /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># find the Environment KUBELET_CONFIG_ARGS and add flag --root-dir=/home/k8s/kubelet</span></span>
<span class="line"><span style="color:#D4D4D4;">Environment=</span><span style="color:#CE9178;">&quot;KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml --root-dir=/home/k8s/kubelet&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>步骤二</strong> 重新加载守护进程</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">systemctl daemon-reload</span></span>
<span class="line"><span style="color:#D4D4D4;">重新启动多维数据集</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>步骤三</strong> 重启<code>Kubelet</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">systemctl restart kubelet</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在，当前节点的<code>Kubelet</code>工作路径已更改为<code>/home/k8s/kubelet</code>.</p>`,46);function k(f,y){const a=r("RouterLink");return o(),d("div",null,[p,s("ul",null,[s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/minikube.html"},{default:l(()=>[e("安装Minikube集群")]),_:1}),e("： 单节点Kubernetes环境，常用于学习使用或作为开发环境。")]),s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster.html"},{default:l(()=>[e("安装Kubernetes集群")]),_:1}),e("：一个Master节点和若干Worker节点组成，常用于开发或测试环境。")]),s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster-ha.html"},{default:l(()=>[e("安装Kubernetes高可用集群")]),_:1}),e("：至少3个Master节点和若干Worker节点组成，常用于测试或生产环境。")])]),u,s("ul",null,[s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/csi-localpath.html"},{default:l(()=>[e("安装LocalPath CSI")]),_:1}),e(": 使用宿主机本地路径作为存储类；")]),s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/csi-ceph.html"},{default:l(()=>[e("安装Ceph CSI")]),_:1}),e(": 使用"),h,e("存储作为存储类；")]),s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/csi-nfs.html"},{default:l(()=>[e("安装NFS CSI")]),_:1}),e(": 使用"),b,e("存储作为存储类；")])]),v,s("ul",null,[s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/cni-calico.html"},{default:l(()=>[e("安装Calico CNI")]),_:1}),e(": 使用"),m,e("作为集群网络框架；")]),s("li",null,[n(a,{to:"/zh/reference/kubernetes/installer/cni-cilium-ebpf.html"},{default:l(()=>[e("安装Cilium/EBPF CNI")]),_:1}),e(": 使用Cilium/EBPF`作为集群网络框架；")])]),D])}const g=c(t,[["render",k],["__file","installer-config.html.vue"]]);export{g as default};
