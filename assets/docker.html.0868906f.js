import{_ as n,r,o as l,c,a as s,b as e,d,e as o}from"./app.8cf05f69.js";const i={},t=s("h1",{id:"docker环境",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#docker环境","aria-hidden":"true"},"#"),e(" Docker环境")],-1),p={href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"},h=o(`<h2 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker" aria-hidden="true">#</a> 安装Docker</h2><h3 id="脚本安装" tabindex="-1"><a class="header-anchor" href="#脚本安装" aria-hidden="true">#</a> 脚本安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置用户" tabindex="-1"><a class="header-anchor" href="#配置用户" aria-hidden="true">#</a> 配置用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo groupadd docker</span></span>
<span class="line"><span style="color:#D4D4D4;">sudo gpasswd -a </span><span style="color:#9CDCFE;">$USER</span><span style="color:#D4D4D4;"> docker</span></span>
<span class="line"><span style="color:#D4D4D4;">newgrp docker </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动docker" tabindex="-1"><a class="header-anchor" href="#启动docker" aria-hidden="true">#</a> 启动Docker</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">systemctl start docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置Docker</h2><p>Docker的配置文件通常为<code>/etc/docker/daemon.json</code>(不存在的话可以创建)。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><ul><li>JSON格式，格式错误Docker会启动不起来；</li><li>修改配置后通常需要<a href="#%E9%87%8D%E5%90%AFdocker">重启Docker</a>方可生效;</li></ul></div><h3 id="配置镜像仓库" tabindex="-1"><a class="header-anchor" href="#配置镜像仓库" aria-hidden="true">#</a> 配置镜像仓库</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;insecure-registries&quot;</span><span style="color:#D4D4D4;">:[</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&quot;</span><span style="color:#9CDCFE;">$hostname</span><span style="color:#CE9178;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    ]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重启docker" tabindex="-1"><a class="header-anchor" href="#重启docker" aria-hidden="true">#</a> 重启Docker</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo systemctl daemon-reload</span></span>
<span class="line"><span style="color:#D4D4D4;">sudo systemctl restart docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function u(D,v){const a=r("ExternalLinkIcon");return l(),c("div",null,[t,s("p",null,[s("a",p,[e("Docker官方文档"),d(a)])]),h])}const m=n(i,[["render",u],["__file","docker.html.vue"]]);export{m as default};
