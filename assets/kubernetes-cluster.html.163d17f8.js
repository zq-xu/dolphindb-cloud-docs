import{_ as c,r,o as p,c as o,a as n,d as a,w as l,b as s,e as i}from"./app.7cabacd3.js";const t={},d=n("h1",{id:"kubernetes集群",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#kubernetes集群","aria-hidden":"true"},"#"),s(" Kubernetes集群")],-1),u=n("p",null,"Kubernetes集群分为单Master节点集群和高可用集群:",-1),b=n("li",null,"单Master节点集群：一个Master节点和若干个Worker节点组成，常用于开发或测试环境；",-1),v=i(`<p>本文使用<code>Kubeadm</code>工具在多台服务器之间安装单Master节点Kubernetes集群。</p><h2 id="搭建环境" tabindex="-1"><a class="header-anchor" href="#搭建环境" aria-hidden="true">#</a> 搭建环境</h2><p>服务器信息如下：</p><ul><li>192.168.1.241: centos 7.9, 用作Master节点</li><li>192.168.1.242: centos 7.9, 用作Worker节点</li><li>192.168.1.243: centos 7.9, 用作Worker节点</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>可以通过指令<code>cat /etc/redhat-release</code>查看服务器系统信息</p></div><h2 id="配置服务器" tabindex="-1"><a class="header-anchor" href="#配置服务器" aria-hidden="true">#</a> 配置服务器</h2><p>在安装Kubernetes集群之前，我们需要在所有服务器上进行环境配置。</p><h3 id="服务器基础配置" tabindex="-1"><a class="header-anchor" href="#服务器基础配置" aria-hidden="true">#</a> 服务器基础配置</h3><p>在安装 Kubernetes 集群之前，我们需要为所有服务器执行以下配置：</p><ul><li>停止<code>Firewalld</code>；</li><li>禁止<code>SeLinux</code>；</li><li>关闭<code>Swap</code>；</li><li>为<code>k8s.conf</code>配置网络</li></ul><p>以上操作可以通过执行以下脚本完成：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Stop the firewall and forbid starting the firewall after computer startup.</span></span>
<span class="line"><span style="color:#D4D4D4;">systemctl stop firewalld</span></span>
<span class="line"><span style="color:#D4D4D4;">systemctl disable firewalld</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Stop the SeLinux temporarily, lose efficacy after reboot.</span></span>
<span class="line"><span style="color:#D4D4D4;">setenforce 0</span></span>
<span class="line"><span style="color:#6A9955;"># Change the config of SeLinux, disable the SeLinux forever.</span></span>
<span class="line"><span style="color:#D4D4D4;">sed -i </span><span style="color:#CE9178;">&#39;s/^SELINUX=.*/SELINUX=disabled/&#39;</span><span style="color:#D4D4D4;"> /etc/selinux/config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Stop the Swap temporarily.</span></span>
<span class="line"><span style="color:#D4D4D4;">swapoff -a</span></span>
<span class="line"><span style="color:#6A9955;"># Change /etc/fstab, delete or annotate the mount of swap to stop the Swap forever.</span></span>
<span class="line"><span style="color:#D4D4D4;">sed -i </span><span style="color:#CE9178;">&#39;/swap/s/^/#/&#39;</span><span style="color:#D4D4D4;"> /etc/fstab</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Change k8s.conf</span></span>
<span class="line"><span style="color:#D4D4D4;">cat </span><span style="color:#D4D4D4;">&lt;&lt;</span><span style="color:#C586C0;">EOF</span><span style="color:#CE9178;"> &gt;  /etc/sysctl.d/k8s.conf</span></span>
<span class="line"><span style="color:#CE9178;">net.bridge.bridge-nf-call-ip6tables = 1</span></span>
<span class="line"><span style="color:#CE9178;">net.bridge.bridge-nf-call-iptables = 1</span></span>
<span class="line"><span style="color:#C586C0;">EOF</span></span>
<span class="line"><span style="color:#D4D4D4;">sysctl --system</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置yum源" tabindex="-1"><a class="header-anchor" href="#配置yum源" aria-hidden="true">#</a> 配置Yum源</h3><p>如果使用中国大陆网络，则可以通过以下脚本配置Yum源，以避免拉取不到Kubernetes相关镜像的问题：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Install part of dependencies.</span></span>
<span class="line"><span style="color:#D4D4D4;">yum install -y yum-utils device-mapper-persistent-data lvm2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Add docker yum source</span></span>
<span class="line"><span style="color:#D4D4D4;">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Add kubernetes yum source</span></span>
<span class="line"><span style="color:#D4D4D4;">cat </span><span style="color:#D4D4D4;">&lt;&lt;</span><span style="color:#C586C0;">EOF</span><span style="color:#CE9178;"> &gt; /etc/yum.repos.d/kubernetes.repo</span></span>
<span class="line"><span style="color:#CE9178;">[kubernetes]</span></span>
<span class="line"><span style="color:#CE9178;">name=Kubernetes</span></span>
<span class="line"><span style="color:#CE9178;">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span>
<span class="line"><span style="color:#CE9178;">enabled=1</span></span>
<span class="line"><span style="color:#CE9178;">gpgcheck=1</span></span>
<span class="line"><span style="color:#CE9178;">repo_gpgcheck=1</span></span>
<span class="line"><span style="color:#CE9178;">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span>
<span class="line"><span style="color:#C586C0;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Cache the packages of added yum source.</span></span>
<span class="line"><span style="color:#D4D4D4;">yum makecache</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置Docker</h3>`,16),D=n("code",null,"Docker",-1),m=i(`<p>通过文件<code>/etc/docker/daemon.json</code>(如果没有，请创建)修改Docker配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;graph&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;/home/docker&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;exec-opts&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">&quot;native.cgroupdriver=systemd&quot;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;insecure-registries&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">&quot;192.168.1.240&quot;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;registry-mirrors&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">&quot;https://b6ie2kuq.mirror.aliyuncs.com&quot;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数说明：</p><ul><li>graph: Docker文件路径，用于Docker镜像等数据的保存，该路径尽量不要太小；</li><li>exec-opts: Docker驱动,此处与Kubernetes保持一致，使用<code>systemd</code>；</li><li>insecure-registries: 私有仓库，主要用于从私有仓库拉取或推送镜像；</li><li>registry-mirrors: 镜像加速器，此处使用阿里云的镜像加速器，提升拉取镜像速度。</li></ul><p>修改好配置文件之后，通过以下命令使配置生效：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">systemctl daemon-reload</span></span>
<span class="line"><span style="color:#D4D4D4;">systemctl restart docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装kubernetes相关工具" tabindex="-1"><a class="header-anchor" href="#安装kubernetes相关工具" aria-hidden="true">#</a> 安装Kubernetes相关工具</h3><p>通过以下脚本安装<code>Kubeadm</code>、<code>Kubelet</code>和<code>Kubectl</code>工具：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Install related services for kubernetes.</span></span>
<span class="line"><span style="color:#D4D4D4;">yum install -y kubelet kubeadm kubectl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">#Set the kubelet start Automatically</span></span>
<span class="line"><span style="color:#D4D4D4;">systemctl </span><span style="color:#DCDCAA;">enable</span><span style="color:#D4D4D4;"> kubelet</span></span>
<span class="line"><span style="color:#D4D4D4;">systemctl start kubelet</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装master节点" tabindex="-1"><a class="header-anchor" href="#安装master节点" aria-hidden="true">#</a> 安装Master节点</h2><p>在Master节点上执行以下脚本安装Kubernetes环境(根据实际环境修改脚本中broadcast值)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;"># should edit broadcast first</span></span>
<span class="line"><span style="color:#D4D4D4;">broadcast=192.168.1.255</span></span>
<span class="line"><span style="color:#D4D4D4;">host=</span><span style="color:#CE9178;">\`ifconfig -a</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">grep </span><span style="color:#9CDCFE;">$broadcast</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">grep -v 127.0.0.1</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">grep -v inet6</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">awk &#39;{print $2}&#39;</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">tr -d &quot;addr:&quot;\`</span></span>
<span class="line"><span style="color:#DCDCAA;">echo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;host is </span><span style="color:#9CDCFE;">$host</span><span style="color:#CE9178;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># --apiserver-advertise-address: set the address of apiServer</span></span>
<span class="line"><span style="color:#6A9955;"># --image-repository: set the image repository, we use the repository of aliyuncs</span></span>
<span class="line"><span style="color:#6A9955;"># --pod-network-cidr: set the CIDR of pods network, we use the net 10.244 for the flannel</span></span>
<span class="line"><span style="color:#D4D4D4;">kubeadm init --apiserver-advertise-address=</span><span style="color:#9CDCFE;">$host</span><span style="color:#D4D4D4;">  \\</span></span>
<span class="line"><span style="color:#D4D4D4;">--image-repository registry.aliyuncs.com/google_containers  \\</span></span>
<span class="line"><span style="color:#D4D4D4;">--pod-network-cidr=10.244.0.0/16</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果此前执行过以上脚本或者<code>Kubeadm</code>安装指令，则应在执行以上脚本之前执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm reset</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>安装完成后，将打印如下消息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">Your Kubernetes control-plane has initialized successfully!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">To start using your cluster, you need to run the following as a regular user:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  mkdir -p </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube</span></span>
<span class="line"><span style="color:#D4D4D4;">  sudo cp -i /etc/kubernetes/admin.conf </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"><span style="color:#D4D4D4;">  sudo chown </span><span style="color:#CE9178;">$(id -u)</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">$(id -g)</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Alternatively, </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> you are the root user, you can run:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">export</span><span style="color:#D4D4D4;"> KUBECONFIG=/etc/kubernetes/admin.conf</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">You should now deploy a pod network to the cluster.</span></span>
<span class="line"><span style="color:#D4D4D4;">Run </span><span style="color:#CE9178;">&quot;kubectl apply -f [podnetwork].yaml&quot;</span><span style="color:#D4D4D4;"> with one of the options listed at:</span></span>
<span class="line"><span style="color:#D4D4D4;">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Then you can join any number of worker nodes by running the following on each as root:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">kubeadm join 192.168.1.241:6443 --token 8kfjbo.fhitoq5xe0oc69x3 \\</span></span>
<span class="line"><span style="color:#D4D4D4;">	--discovery-token-ca-cert-hash sha256:9a8f0ac267ab413da6e4d07b102764b33d5e4c25342a3e2c646adf4a778241ea </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置kubeconfig" tabindex="-1"><a class="header-anchor" href="#配置kubeconfig" aria-hidden="true">#</a> 配置Kubeconfig</h3><p>根据Master节点安装完成后的打印信息配置<code>Kubeconfig</code>,方可使用<code>Kubectl</code>指令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;"># 根据用户身份选择执行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 非root用户</span></span>
<span class="line"><span style="color:#D4D4D4;">mkdir -p </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube</span></span>
<span class="line"><span style="color:#D4D4D4;">sudo cp -i /etc/kubernetes/admin.conf </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"><span style="color:#D4D4D4;">sudo chown </span><span style="color:#CE9178;">$(id -u)</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">$(id -g)</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$HOME</span><span style="color:#D4D4D4;">/.kube/config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># root用户</span></span>
<span class="line"><span style="color:#569CD6;">export</span><span style="color:#D4D4D4;"> KUBECONFIG=/etc/kubernetes/admin.conf</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装kubernetes网络组件" tabindex="-1"><a class="header-anchor" href="#安装kubernetes网络组件" aria-hidden="true">#</a> 安装Kubernetes网络组件</h3><p>根据Master节点安装完成后的打印信息安装网络组件，此处选择<code>Flannel</code>（Kubernetes v1.17+）:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 以上指令若不可用，可分开执行，如下：</span></span>
<span class="line"><span style="color:#D4D4D4;">wget  https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span>
<span class="line"><span style="color:#D4D4D4;">kubectl apply -f kube-flannel.yml</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">网络组件应与安装步骤中的网络匹配</p><p><a href="#%E5%AE%89%E8%A3%85master%E8%8A%82%E7%82%B9">安装Master节点</a>中的<code>pod-network-cidr=10.244.0.0/16</code> 匹配<code>Flannel</code>网络。</p></div><h2 id="查看集群信息" tabindex="-1"><a class="header-anchor" href="#查看集群信息" aria-hidden="true">#</a> 查看集群信息</h2><h3 id="查看pod信息" tabindex="-1"><a class="header-anchor" href="#查看pod信息" aria-hidden="true">#</a> 查看Pod信息</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl get po -A</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 控制台打印如下信息：</span></span>
<span class="line"><span style="color:#D4D4D4;">NAMESPACE     NAME                           READY   STATUS    RESTARTS   AGE</span></span>
<span class="line"><span style="color:#D4D4D4;">kube-system   coredns-7f6cbbb7b8-dgpnw       1/1     Running   0          55s</span></span>
<span class="line"><span style="color:#D4D4D4;">kube-system   coredns-7f6cbbb7b8-shr25       1/1     Running   0          55s</span></span>
<span class="line"><span style="color:#D4D4D4;">kube-system   etcd-ib-1                      1/1     Running   1          68s</span></span>
<span class="line"><span style="color:#D4D4D4;">kube-system   kube-apiserver-ib-1            1/1     Running   1          68s</span></span>
<span class="line"><span style="color:#D4D4D4;">kube-system   kube-controller-manager-ib-1   1/1     Running   1          67s</span></span>
<span class="line"><span style="color:#D4D4D4;">kube-system   kube-proxy-mx2ll               1/1     Running   0          55s</span></span>
<span class="line"><span style="color:#D4D4D4;">kube-system   kube-scheduler-ib-1            1/1     Running   1          68s</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看节点信息" tabindex="-1"><a class="header-anchor" href="#查看节点信息" aria-hidden="true">#</a> 查看节点信息</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubectl get nodes -owide</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 控制台打印如下信息：</span></span>
<span class="line"><span style="color:#D4D4D4;">NAME   STATUS   ROLES                  AGE   VERSION   INTERNAL-IP      EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION           CONTAINER-RUNTIME</span></span>
<span class="line"><span style="color:#D4D4D4;">ib-1   Ready    control-plane,master   15m   v1.23.4   192.168.1.241   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1160.el7.x86_64   docker://20.10.12</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加worker节点" tabindex="-1"><a class="header-anchor" href="#添加worker节点" aria-hidden="true">#</a> 添加Worker节点</h2><p>根据Master节点安装完成后的打印信息可以将Worker节点加入到Master节点所在Kubernetes集群。</p><p>在需要加入的Worker节点上执行以下指令(指令取自Master节点安装完成后的打印信息)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm join 192.168.1.241:6443 --token 8kfjbo.fhitoq5xe0oc69x3 \\</span></span>
<span class="line"><span style="color:#D4D4D4;">	--discovery-token-ca-cert-hash sha256:9a8f0ac267ab413da6e4d07b102764b33d5e4c25342a3e2c646adf4a778241ea </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,31),y={class:"custom-container tip"},h=n("p",{class:"custom-container-title"},"提示",-1),k=n("code",null,"Kubeconfig",-1),E=i(`<h2 id="卸载kubernetes集群" tabindex="-1"><a class="header-anchor" href="#卸载kubernetes集群" aria-hidden="true">#</a> 卸载Kubernetes集群</h2><p>在服务器上执行以下脚本，卸载当前服务器上的Kubernetes环境：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">kubeadm reset -f</span></span>
<span class="line"><span style="color:#D4D4D4;">modprobe -r ipip</span></span>
<span class="line"><span style="color:#D4D4D4;">lsmod</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf ~/.kube/</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /etc/kubernetes/</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /etc/systemd/system/kubelet.service.d</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /etc/systemd/system/kubelet.service</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /usr/bin/kube*</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /etc/cni</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /opt/cni</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /var/lib/etcd</span></span>
<span class="line"><span style="color:#D4D4D4;">rm -rf /var/etcd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">yum remove -y kubelet kubeadm kubectl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">ifconfig cni0 down</span></span>
<span class="line"><span style="color:#D4D4D4;">ip link delete cni0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),f={class:"custom-container tip"},g=n("p",{class:"custom-container-title"},"提示",-1),C=n("code",null,"Kubelet",-1);function A(x,_){const e=r("RouterLink");return p(),o("div",null,[d,u,n("ul",null,[b,n("li",null,[a(e,{to:"/zh/reference/kubernetes/installer/kubernetes-cluster-ha.html"},{default:l(()=>[s("高可用集群")]),_:1}),s("：至少3个Master节点和若干Worker节点组成，常用于测试或生产环境。")])]),v,n("p",null,[s("此处使用"),D,s("作为Kubernetes的容器运行时，安装Docker可参考"),a(e,{to:"/zh/reference/docker/insatller.html"},{default:l(()=>[s("Docker安装")]),_:1}),s("。")]),m,n("div",y,[h,n("ul",null,[n("li",null,[s("Kubeadm更多参数参考"),a(e,{to:"/zh/reference/tools/kubeadm.html#%E5%8F%82%E6%95%B0"},{default:l(()=>[s("Kubeadm参数")]),_:1}),s(";")]),n("li",null,[s("若Token已过期，参考"),a(e,{to:"/zh/reference/kubernetes/installer-config.html#%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E5%A2%9E%E5%8A%A0%E8%8A%82%E7%82%B9%E7%9A%84token"},{default:l(()=>[s("重新生成增加节点的Token")]),_:1}),s(";")]),n("li",null,[s("添加Worker节点之后，亦需要配置"),k,s("，参考"),a(e,{to:"/zh/reference/kubernetes/installer-config.html#%E9%85%8D%E7%BD%AEkubeconfig"},{default:l(()=>[s("配置Kubeconfig")]),_:1}),s(".")])])]),E,n("div",f,[g,n("p",null,[s("如果修改了"),C,s("的工作路径，记得手动清理。(参考"),a(e,{to:"/zh/reference/kubernetes/installer-config.html#%E6%9B%B4%E6%94%B9Kubelet%E5%B7%A5%E4%BD%9C%E8%B7%AF%E5%BE%84"},{default:l(()=>[s("更改Kubelet工作路径")]),_:1}),s(")")])])])}const K=c(t,[["render",A],["__file","kubernetes-cluster.html.vue"]]);export{K as default};
